{"remainingRequest":"/home/kanglerian/Apps/kanglerian.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/kanglerian/Apps/kanglerian.github.io/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/kanglerian/Apps/kanglerian.github.io/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/kanglerian/Apps/kanglerian.github.io/src/views/Kelas.vue?vue&type=template&id=450a823a&scoped=true&","dependencies":[{"path":"/home/kanglerian/Apps/kanglerian.github.io/src/views/Kelas.vue","mtime":1616629628971},{"path":"/home/kanglerian/Apps/kanglerian.github.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/kanglerian/Apps/kanglerian.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/kanglerian/Apps/kanglerian.github.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/kanglerian/Apps/kanglerian.github.io/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}